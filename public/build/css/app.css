/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (<none>)
 * Config saved to config.json and <none>
 *//*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}*:before,*:after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}input,button,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:hover,a:focus{color:#23527c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.img-responsive{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role="button"]{cursor:pointer}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.row{margin-left:-15px;margin-right:-15px}.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}.clearfix:before,.clearfix:after,.container:before,.container:after,.container-fluid:before,.container-fluid:after,.row:before,.row:after{content:" ";display:table}.clearfix:after,.container:after,.container-fluid:after,.row:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right !important}.pull-left{float:left !important}.hide{display:none !important}.show{display:block !important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none !important}.affix{position:fixed}/*
0 - 600 px:         Phone
600 - 900 px:       Tablet Portrait
900 - 1200px:       Tablet Landscape
1200 - 1800px:      Desktop (where our normal styles apply)
1800 +:             Big Desktop

$breakpoint argument choices
- phone: 600px
- tab-port: 900px
- tab-land: 1200px
- big-desktop: 1800px

Order to attack media querries:
- Base
- Typography
- Layout (header, footer, navigation, grid)
- page layout
- changing components
*/

:root {
  --color-primary-lightest: #d5e4fc;
  --color-primary-light: #3772d1;
  --color-primary: #18468f;
  --color-primary-dark: #202c5f;
  --color-primary-darkest: #141e3f;
  --color-grey-light-1: #f9f9f9;
  --color-grey-light-2: #dfe1e5;
  --color-grey-light-3: #c2c6cc;
  --color-grey-dark-1: #2c2a29;
  --color-grey-dark-2: #63656a;
  --color-grey-dark-3: #6f787c;
  --color-green: rgb(54, 199, 90);
  --color-red: rgb(233, 79, 79);
  --shadow-dark: 0 .2rem .6rem rgba(0, 0, 0, .5);
  --shadow-light: 0rem 0rem 1rem rgba(0, 0, 0, .1);
  --shadow-blurry-light: 0rem .2rem 1.8rem rgba(0, 0, 0, .15);
  --line: 1px solid var(--color-grey-light-2);
  --line-light: 2px solid var(--color-grey-light-1);
  --font-serif: 'Merriweather', serif;
  --font-sans-serif: 'Open Sans', sans-serif;
  --font-weight-light: 300;
  --font-weight-regular: 400;
  --font-weight-medium: 600;
  --font-weight-bold: 700;
  --radius-small: .3rem;
  --radius-medium: .6rem;
  --radius-large: 1rem;
}

* {
  margin: 0;
  padding: 0;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
}

@media only screen and (max-width: 75em) {
  html {
    font-size: 56.25%;
  }
}

@media only screen and (max-width: 56.25em) {
  html {
    font-size: 50%;
  }
}

@media only screen and (min-width: 112.5em) {
  html {
    font-size: 75%;
  }
}

body {
  font-family: var(--font-sans-serif);
  font-display: swap;
  font-weight: 300;
  line-height: 1.6;
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;
  color: var(--color-grey-dark-2);
}

[class^="col-"],
.container-fluid,
.row {
  padding: 0;
  margin: 0;
}

::selection {
  background-color: var(--color-primary);
  color: #fff;
}

.heading-primary {
  font-size: 6.2rem;
  color: var(--color-grey-dark-1);
  font-family: var(--font-serif);
  margin: 0;
  padding: 0;
}

.heading-primary--italic {
  font-style: italic;
}

.heading-primary--white {
  color: #fff;
}

.heading-secondary {
  font-size: 2.2rem;
  color: var(--color-grey-dark-1);
  font-family: var(--font-serif);
  margin: 0;
  padding: 0;
}

.heading-secondary--italic {
  font-weight: var(--font-weight-bold);
  font-size: 3.2rem;
  font-style: italic;
}

.heading-secondary--small {
  font-size: 2rem;
}

.description {
  font-size: 1.8rem;
  color: var(--color-grey-dark-2);
}

.description--white {
  color: #fff;
}

.description--primary {
  color: var(--color-primary);
}

.description--callout {
  font-family: var(--font-serif);
  font-style: italic;
}

.description--small {
  font-size: 1.4rem;
}

.contact {
  font-size: 1.4rem;
}

.contact--white {
  color: rgba(255, 255, 255, 0.7);
}

.material-icons.md-18 {
  font-size: 1.8rem;
}

.material-icons.md-16 {
  font-size: 1.6rem;
}

.material-icons.centered {
  display: flex;
  align-items: center;
}

.contact-information {
  font-size: 1.6rem;
  font-family: var(--font-serif);
}

.contact-information--title {
  font-weight: var(--font-weight-bold);
  font-style: italic;
}

.contact-information--name {
  font-size: 1.4rem;
}

.contact-information--contact {
  font-size: 1.4rem;
  font-family: var(--font-sans-serif);
  font-style: italic;
}

.u-margin-bottom-huge {
  margin-bottom: 8rem;
}

.u-margin-bottom-large {
  margin-bottom: 6rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}

.u-margin-bottom-small {
  margin-bottom: 2rem;
}

.u-margin-bottom-xsmall {
  margin-bottom: 1rem;
}

.u-margin-top-small {
  margin-top: 1rem;
}

.u-margin-top-medium {
  margin-top: 2rem;
}

.u-margin-top-large {
  margin-top: 4rem;
}

.branch {
  padding: 0 1rem;
  margin: 1rem 0;
}

@media only screen and (max-width: 56.25em) {
  .branch {
    padding: 0;
    margin: -4rem;
  }
}

.branch:first-child {
  padding-left: 0;
}

.branch:last-child {
  padding-right: 0;
}

.branch__card {
  display: flex;
  flex-direction: column;
  border-radius: var(--radius-medium);
  box-shadow: var(--shadow-light);
  overflow: hidden;
}

@media only screen and (max-width: 56.25em) {
  .branch__card {
    border-radius: 0;
  }
}

.branch__content-container {
  padding: 2rem 3rem;
}

.branch__hero {
  width: 100%;
  overflow: hidden;
  min-height: 22rem;
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
  background-size: cover;
  background-image: url(/build/images/hero_legislative.d840b3c2.jpg);
}

.branch__hero--left {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 90%);
}

.branch__hero--legislative {
  background-image: url(/build/images/hero_legislative.d840b3c2.jpg);
}

.branch__hero--executive {
  background-image: url(/build/images/hero_executive.43078f93.jpg);
}

.branch__hero--judicial {
  background-image: url(/build/images/hero_judicial.82342fe1.jpg);
}

.branch__image {
  width: 100%;
}

.branch__link,
.branch__link:link,
.branch__link:visited {
  display: inline-block;
  padding: 1rem 1.5rem;
  text-transform: uppercase;
  text-decoration: none;
  color: #fff;
  background-color: var(--color-primary);
  border-radius: var(--radius-small);
  font-size: 1.2rem;
  font-weight: var(--font-weight-medium);
}

.btn {
  font-size: 1.4rem;
  font-weight: 400;
  letter-spacing: 1px;
  text-transform: capitalize;
  padding: 1rem 2rem;
  border: none;
  cursor: pointer;
  transition: all .2s;
  text-align: center;
  display: inline-block;
}

.btn:link,
.btn:visited {
  text-decoration: none;
}

.btn--destructive {
  border: 1px solid var(--color-red);
  color: var(--color-red);
}

.btn--destructive:hover {
  background-color: var(--color-red);
  color: #fff;
}

.btn--blue {
  border: 1px solid royalblue;
  color: royalblue;
}

.btn--blue:hover {
  background-color: royalblue;
  color: #fff;
}

.btn--blue-solid {
  background-color: royalblue;
  color: #fff;
}

.btn--approved::before {
  font-family: "Material Icons";
  content: "\E876";
  margin-right: .7rem;
}

.btn--green {
  border: 1px solid var(--color-green);
  color: var(--color-green);
  text-transform: uppercase;
}

.btn--green:hover {
  background-color: var(--color-green);
  color: #fff;
}

.btn--green-solid {
  background-color: var(--color-green);
  color: #fff;
}

.btn--green-solid:hover {
  border: 1px solid var(--color-green);
  color: var(--color-green);
  background-color: #fff;
}

.btn--full-width {
  width: 100%;
}

.btn-default {
  font-size: 1.2rem;
  text-transform: uppercase;
  border-radius: var(--radius-small);
}

.btn-default--centered {
  display: flex;
  align-content: center;
  justify-content: center;
}

.btn-primary {
  background-color: var(--color-primary);
  color: #fff;
  border-radius: 100rem;
  font-size: 1.4rem;
  box-shadow: 0 0 2rem rgba(var(--color-primary), 0.2);
  align-content: center;
  justify-content: center;
}

.btn--right {
  float: right;
}

.btn:focus {
  box-sizing: content-box;
  border: 3px solid var(--color-primary-light);
  outline: none;
}

.card {
  box-shadow: var(--shadow-light);
  border-radius: var(--radius-small);
  display: flex;
  padding: 1.5rem 2rem;
  margin: 1.5rem 2rem;
  position: relative;
}

.card__image-container {
  overflow: hidden;
  background-color: rebeccapurple;
  margin-right: 3rem;
  flex: 0 0 40%;
  z-index: 100;
}

.card__image {
  width: 100%;
}

.card__description {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex: 1;
}

.user-inputs {
  display: flex;
  position: relative;
  margin-top: 8rem;
}

.user-inputs-container {
  width: 100%;
  text-align: center;
}

.user-inputs--small {
  max-width: 50vw;
  margin: 0 auto;
}

.user-inputs__email {
  font-size: 1.4rem;
  padding: 1rem;
  padding-left: 1.7rem;
  flex: 0 0 80%;
  margin-right: 1rem;
  border: none;
  outline: none;
  border-radius: var(--radius-small);
  box-shadow: var(--shadow-dark);
}

.user-inputs__email--dark {
  box-shadow: var(--shadow-blurry-light);
}

.user-inputs__label,
.user-inputs label {
  position: absolute;
  left: 0;
  top: -2.5rem;
  font-family: var(--font-serif);
  color: white;
  font-size: 1.6rem;
  font-weight: 300;
  font-style: italic;
}

.user-inputs__label--dark,
.user-inputs label--dark {
  color: var(--color-primary);
}

.user-inputs__submit {
  flex: 1;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;
  border: none;
  outline: none;
  border-radius: var(--radius-small);
  color: #fff;
  background-color: var(--color-primary);
  box-shadow: var(--shadow-dark);
}

.user-inputs__submit--dark {
  box-shadow: var(--shadow-blurry-light);
}

.footer {
  min-height: 25rem;
  background-color: var(--color-primary-dark);
  position: relative;
  display: flex;
  padding: 6rem 6rem;
  margin-top: 6rem;
}

@supports (clip-path: polygon(0% 0%, 100% 5%, 100% 100%, 0% 100%)) or (-webkit-clip-path: polygon(0% 0%, 100% 5%, 100% 100%, 0% 100%)) {
  .footer {
    clip-path: polygon(0% 12%, 33% 0%, 100% 10%, 100% 100%, 0% 100%);
  }
}

@media only screen and (max-width: 56.25em) {
@supports (clip-path: polygon(0% 0%, 100% 5%, 100% 100%, 0% 100%)) or (-webkit-clip-path: polygon(0% 0%, 100% 5%, 100% 100%, 0% 100%)) {
    .footer {
      clip-path: polygon(0% 0%, 100% 8%, 100% 100%, 0% 100%);
    }
}
}

.footer__copy {
  position: absolute;
  width: 100%;
  background-color: var(--color-primary-darkest);
  bottom: 0;
  left: 0;
}

.footer__copy-text {
  color: #fff;
  font-size: 1rem;
  opacity: .4;
  display: block;
  text-align: center;
  padding-top: .7rem;
  padding-bottom: .7rem;
  letter-spacing: .15rem;
}

.footer__logo {
  border-bottom: 1px solid rgba(255, 255, 255, 0.4);
}

@media only screen and (max-width: 56.25em) {
  .footer__logo {
    text-align: center;
  }
}

.funding-type {
  font-family: var(--font-serif);
  margin-left: 4rem;
}

@media only screen and (max-width: 56.25em) {
  .funding-type {
    margin-left: 0;
  }
}

.funding-type:not(:first-child) {
  margin-top: 4rem;
}

@media only screen and (max-width: 56.25em) {
  .funding-type:not(:first-child) {
    margin-top: 2rem;
  }
}

.funding-type__title {
  font-size: 2.4rem;
  color: var(--color-grey-dark-1);
  border-bottom: var(--line);
  margin-bottom: 1rem;
}

.funding-type__content {
  font-family: var(--font-sans-serif);
  font-size: 1.6rem;
}

.funding-type__amount-container {
  display: flex;
  margin-top: 1.4rem;
}

.funding-type__amount-header {
  font-family: var(--font-sans-serif);
  text-transform: uppercase;
  font-size: 1.2rem;
  font-weight: var(--font-weight-bold);
}

.funding-type__list {
  padding: 0 4rem;
  font-size: 1.6rem;
}

@media only screen and (max-width: 56.25em) {
  .funding-type__list {
    padding: 0 2rem;
  }
}

.funding-type__list-item:not(:last-child) {
  margin-bottom: 1rem;
}

.header {
  height: 90vh;
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/header_hero.e7a2f639.jpg);
  background-size: cover;
  display: flex;
  flex-direction: column;
  justify-content: center;
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0% 100%);
  position: relative;
}

.header--branches {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_branches.75c121e6.jpg);
}

.header--executive {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_executive.43078f93.jpg);
}

.header--legislative {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_legislative.d840b3c2.jpg);
}

.header--judicial {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_judicial.82342fe1.jpg);
}

.header--services {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_services.d840b3c2.jpg);
}

.header--funding {
  background-image: linear-gradient(to bottom right, rgba(24, 70, 143, 0.7), transparent), url(/build/images/hero_funding.179de6e1.jpg);
}

.header__text-container {
  width: 50vw;
  margin-left: 10vw;
}

.letter {
  display: flex;
  align-items: center;
  flex-direction: column;
  padding: 6rem 4rem 3rem 4rem;
  margin: 0 auto;
  max-width: 80rem;
  box-shadow: var(--shadow-light);
  border-radius: var(--radius-small);
}

.letter__head {
  display: flex;
  width: 100%;
}

.letter__logo-container {
  flex: 0 0 20rem;
  border-right: var(--line);
}

.letter__office {
  flex: 1;
  font-family: var(--font-serif);
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-left: 2rem;
}

.letter__office-details {
  font-style: italic;
  font-size: 1.2rem;
  color: var(--color-primary);
}

.letter__footer {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: var(--font-serif);
}

.letter__footer-contact {
  font-size: 1.2rem;
}

.letter__footer-detail {
  color: var(--color-primary);
  font-style: italic;
  font-size: 1rem;
}

.letter__signature-container {
  width: 20rem;
  align-self: flex-start;
}

.letter__signature {
  width: 100%;
}

.letter__logo {
  width: 12rem;
}

.link {
  text-decoration: none;
  display: inline-block;
  font-size: 1.6rem;
  text-transform: uppercase;
  font-weight: 700;
  border-bottom: 2px solid var(--color-primary);
  transition: all .2s;
}

.link--primary {
  color: var(--color-primary);
}

.link:hover {
  letter-spacing: 1px;
}

.logo--primary {
  height: 4rem;
  margin: 1rem;
}

@media only screen and (max-width: 56.25em) {
  .logo--primary {
    height: 6rem;
  }
}

.logo--secondary {
  width: 20rem;
  margin: 1rem;
}

.logo--flex {
  width: 100%;
}

.nav-header {
  display: flex;
  box-shadow: var(--shadow-light);
  flex-wrap: wrap;
}

.nav-header__nav-toggle {
  display: none;
  justify-content: center;
  align-items: center;
}

@media only screen and (max-width: 56.25em) {
  .nav-header__nav-toggle {
    display: flex;
  }
}

.nav-header__nav-toggle-link,
.nav-header__nav-toggle-link:link,
.nav-header__nav-toggle-link:visited {
  text-decoration: none;
  padding: 0 1rem;
}

.nav-header__logo-container {
  flex: 0 0 25rem;
  margin-right: auto;
}

.nav-header__nav {
  align-self: flex-end;
  padding-left: 2rem;
  padding-right: 2rem;
}

@media only screen and (max-width: 56.25em) {
  .nav-header__nav {
    display: none;
    flex-basis: 100%;
    padding: 0;
  }
}

.nav-primary {
  display: flex;
  align-items: center;
  list-style: none;
}

@media only screen and (max-width: 56.25em) {
  .nav-primary {
    display: block;
  }
}

.nav-primary > * {
  cursor: pointer;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.nav-primary__logo {
  margin-right: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.nav-primary__item {
  height: 100%;
  align-self: flex-end;
  box-sizing: border-box;
}

.nav-primary__item--active > a.nav-primary__link {
  color: var(--color-primary);
  border-bottom: 3px solid var(--color-primary) !important;
}

@media only screen and (max-width: 56.25em) {
  .nav-primary__item--active > a.nav-primary__link {
    background-color: var(--color-primary);
    color: #fff;
  }
}

.nav-primary__link,
.nav-primary__link:link,
.nav-primary__link:visited {
  font-size: 1.4rem;
  text-decoration: none;
  color: var(--color-grey-dark-3);
  padding-bottom: 1rem;
  border-bottom: 3px solid transparent;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  transition: all .3s;
}

.nav-primary__link:hover,
.nav-primary__link:link:hover,
.nav-primary__link:visited:hover {
  color: var(--color-primary);
  border-bottom: 3px solid var(--color-primary);
}

@media only screen and (max-width: 56.25em) {
  .nav-primary__link,
  .nav-primary__link:link,
  .nav-primary__link:visited {
    width: 100%;
    padding: 1rem 2rem;
    border-bottom: var(--line);
  }

  .nav-primary__link:hover,
  .nav-primary__link:link:hover,
  .nav-primary__link:visited:hover {
    color: var(--color-primary);
    border-bottom: var(--line);
    background-color: var(--color-grey-light-1);
  }
}

.profile-container__row {
  width: 100%;
}

.profile-container__row--vip {
  margin-bottom: 4rem;
}

.profile-container__icon {
  position: absolute;
  right: 1rem;
  top: 1rem;
  visibility: hidden;
  padding: .5rem;
  border-radius: 100rem;
  color: var(--color-grey-dark-2);
}

.profile-container__profile {
  padding: 2rem;
  margin: 0 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  border-radius: var(--radius-medium);
  transition: all .1s;
}

.profile-container__profile:hover {
  background-color: var(--color-grey-light-1);
}

.profile-container__profile:hover .profile-container__icon {
  visibility: visible;
}

.profile-container__image-container {
  position: relative;
  width: 15rem;
  height: 15rem;
  overflow: hidden;
  border-radius: 50%;
}

.profile-container__image {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 100%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.profile-container__information-box {
  display: flex;
  justify-content: center;
}

.profile-container__information {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.profile-container__text-icon {
  margin-right: .6rem;
  display: flex;
  justify-content: center;
}

.profile-container__section-description {
  padding: 1.6rem 0;
  display: flex;
  justify-content: center;
  text-align: center;
  border-bottom: var(--line);
}

.profile-container__link,
.profile-container__link:link,
.profile-container__link:visited {
  text-decoration: none;
  font-style: italic;
  color: var(--color-grey-dark-2);
}

.service {
  display: flex;
  margin: 1rem 0;
  padding: 5rem 3rem;
  border-bottom: var(--line);
}

.service__content-container {
  flex: 0 0 70%;
  margin: 0 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.service__description {
  margin-bottom: 1rem;
}

.service__contact-container {
  display: flex;
  position: relative;
  margin: 4rem 0;
}

.service__contact-container::before {
  content: "Get in touch!";
  text-transform: uppercase;
  font-size: 1.2rem;
  font-weight: var(--font-weight-medium);
  position: absolute;
  top: -2.3rem;
}

.service__icon {
  margin-right: 1rem;
}

.service__image-container {
  flex: 1;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.service__image {
  width: 100%;
  border-radius: 50%;
}

.service__image-caption {
  font-size: 1.2rem;
  font-style: italic;
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: var(--color-grey-dark-3);
}

.social-container {
  display: flex;
  justify-content: flex-end;
}

@media only screen and (max-width: 56.25em) {
  .social-container {
    justify-content: center;
  }
}

.social-container__item {
  margin: 0 .5rem;
  background-color: #fff;
  border-radius: 50%;
  height: 3.5rem;
  width: 3.5rem;
  overflow: hidden;
  box-shadow: var(--shadow-dark);
  cursor: pointer;
}

.social-container__logo {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.social-container__image {
  width: 80%;
}

.contact-card {
  display: flex;
  padding: 1.5rem;
  border-radius: var(--radius-medium);
  box-shadow: var(--shadow-light);
}

.contact-card__image-container {
  flex: 0 0 10%;
  max-width: 10rem;
}

.contact-card__image {
  width: 100%;
  border-radius: 50%;
}

.contact-card__contact-container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  margin: 0 2rem;
}

.contact-card__contact-container:last-child {
  flex: 1;
}

.contact-card__link,
.contact-card__link:link,
.contact-card__link:visited {
  text-decoration: none;
  color: currentColor;
}

.contact-card__contact-item {
  font-family: var(--font-sans-serif);
  font-size: 1.4rem;
}

.contact-card__contact-item--label {
  text-transform: uppercase;
  font-size: 1.2rem;
  font-weight: var(--font-weight-medium);
  display: flex;
}

.contact-card__contact-item--icon {
  margin-right: .5rem;
}

.video-container {
  display: flex;
  justify-content: center;
  padding: 3rem;
  box-shadow: var(--shadow-blurry-light);
  border-radius: 2rem;
  transform: rotate(2deg);
}

.video-container > * {
  transform: rotate(-2deg);
}

.video-container__video {
  height: 40rem;
  width: 60rem;
  background-color: var(--color-grey-light-3);
  border-radius: .6rem;
}

.section {
  padding: 2rem 20rem;
}

@media only screen and (max-width: 56.25em) {
  .section {
    padding: 2rem 4rem;
  }
}

.section:first-child {
  margin-top: 6rem;
}

.container-fluid {
  width: 100%;
}

.container-admin-content {
  display: flex;
  padding: 4rem;
}

.container-admin-body {
  margin-left: 5rem;
  flex: 1;
}

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}

.hamburger:hover {
  opacity: 0.7;
}

.hamburger-box {
  width: 3rem;
  height: 1.8rem;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -0.1rem;
}

.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after {
  width: 3rem;
  height: 0.2rem;
  background-color: var(--color-primary);
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}

.hamburger-inner::before,
.hamburger-inner::after {
  content: "";
  display: block;
}

.hamburger-inner::before {
  top: -0.8rem;
}

.hamburger-inner::after {
  bottom: -0.8rem;
}

/*
   * 3DX
   */

.hamburger--3dx .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dx .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dx .hamburger-inner::before,
.hamburger--3dx .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dx.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateY(180deg);
}

.hamburger--3dx.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dx.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * 3DX Reverse
   */

.hamburger--3dx-r .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dx-r .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dx-r .hamburger-inner::before,
.hamburger--3dx-r .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dx-r.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateY(-180deg);
}

.hamburger--3dx-r.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dx-r.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * 3DY
   */

.hamburger--3dy .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dy .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dy .hamburger-inner::before,
.hamburger--3dy .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dy.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateX(-180deg);
}

.hamburger--3dy.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dy.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * 3DY Reverse
   */

.hamburger--3dy-r .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dy-r .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dy-r .hamburger-inner::before,
.hamburger--3dy-r .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dy-r.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateX(180deg);
}

.hamburger--3dy-r.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dy-r.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * 3DXY
   */

.hamburger--3dxy .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dxy .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dxy .hamburger-inner::before,
.hamburger--3dxy .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dxy.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateX(180deg) rotateY(180deg);
}

.hamburger--3dxy.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dxy.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * 3DXY Reverse
   */

.hamburger--3dxy-r .hamburger-box {
  perspective: 6rem;
}

.hamburger--3dxy-r .hamburger-inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dxy-r .hamburger-inner::before,
.hamburger--3dxy-r .hamburger-inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger--3dxy-r.is-active .hamburger-inner {
  background-color: transparent;
  transform: rotateX(180deg) rotateY(180deg) rotateZ(-180deg);
}

.hamburger--3dxy-r.is-active .hamburger-inner::before {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--3dxy-r.is-active .hamburger-inner::after {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
}

/*
   * Arrow
   */

.hamburger--arrow.is-active .hamburger-inner::before {
  transform: translate3d(-0.6rem, 0, 0) rotate(-45deg) scale(0.7, 1);
}

.hamburger--arrow.is-active .hamburger-inner::after {
  transform: translate3d(-0.6rem, 0, 0) rotate(45deg) scale(0.7, 1);
}

/*
   * Arrow Right
   */

.hamburger--arrow-r.is-active .hamburger-inner::before {
  transform: translate3d(0.6rem, 0, 0) rotate(45deg) scale(0.7, 1);
}

.hamburger--arrow-r.is-active .hamburger-inner::after {
  transform: translate3d(0.6rem, 0, 0) rotate(-45deg) scale(0.7, 1);
}

/*
   * Arrow Alt
   */

.hamburger--arrowalt .hamburger-inner::before {
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.hamburger--arrowalt .hamburger-inner::after {
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.hamburger--arrowalt.is-active .hamburger-inner::before {
  top: 0;
  transform: translate3d(-0.6rem, -0.75rem, 0) rotate(-45deg) scale(0.7, 1);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

.hamburger--arrowalt.is-active .hamburger-inner::after {
  bottom: 0;
  transform: translate3d(-0.6rem, 0.75rem, 0) rotate(45deg) scale(0.7, 1);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

/*
   * Arrow Alt Right
   */

.hamburger--arrowalt-r .hamburger-inner::before {
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.hamburger--arrowalt-r .hamburger-inner::after {
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.hamburger--arrowalt-r.is-active .hamburger-inner::before {
  top: 0;
  transform: translate3d(0.6rem, -0.75rem, 0) rotate(45deg) scale(0.7, 1);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

.hamburger--arrowalt-r.is-active .hamburger-inner::after {
  bottom: 0;
  transform: translate3d(0.6rem, 0.75rem, 0) rotate(-45deg) scale(0.7, 1);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
}

/*
   * Arrow Turn
   */

.hamburger--arrowturn.is-active .hamburger-inner {
  transform: rotate(-180deg);
}

.hamburger--arrowturn.is-active .hamburger-inner::before {
  transform: translate3d(8px, 0, 0) rotate(45deg) scale(0.7, 1);
}

.hamburger--arrowturn.is-active .hamburger-inner::after {
  transform: translate3d(8px, 0, 0) rotate(-45deg) scale(0.7, 1);
}

/*
   * Arrow Turn Right
   */

.hamburger--arrowturn-r.is-active .hamburger-inner {
  transform: rotate(-180deg);
}

.hamburger--arrowturn-r.is-active .hamburger-inner::before {
  transform: translate3d(-8px, 0, 0) rotate(-45deg) scale(0.7, 1);
}

.hamburger--arrowturn-r.is-active .hamburger-inner::after {
  transform: translate3d(-8px, 0, 0) rotate(45deg) scale(0.7, 1);
}

/*
   * Boring
   */

.hamburger--boring .hamburger-inner,
.hamburger--boring .hamburger-inner::before,
.hamburger--boring .hamburger-inner::after {
  transition-property: none;
}

.hamburger--boring.is-active .hamburger-inner {
  transform: rotate(45deg);
}

.hamburger--boring.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
}

.hamburger--boring.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
}

/*
   * Collapse
   */

.hamburger--collapse .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--collapse .hamburger-inner::after {
  top: -1.6rem;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear;
}

.hamburger--collapse .hamburger-inner::before {
  transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--collapse.is-active .hamburger-inner {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--collapse.is-active .hamburger-inner::after {
  top: 0;
  opacity: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear;
}

.hamburger--collapse.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(-90deg);
  transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Collapse Reverse
   */

.hamburger--collapse-r .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--collapse-r .hamburger-inner::after {
  top: -1.6rem;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear;
}

.hamburger--collapse-r .hamburger-inner::before {
  transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--collapse-r.is-active .hamburger-inner {
  transform: translate3d(0, -0.8rem, 0) rotate(45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--collapse-r.is-active .hamburger-inner::after {
  top: 0;
  opacity: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear;
}

.hamburger--collapse-r.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(90deg);
  transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Elastic
   */

.hamburger--elastic .hamburger-inner {
  top: 0.1rem;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic .hamburger-inner::before {
  top: 0.8rem;
  transition: opacity 0.125s 0.275s ease;
}

.hamburger--elastic .hamburger-inner::after {
  top: 1.6rem;
  transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic.is-active .hamburger-inner {
  transform: translate3d(0, 0.8rem, 0) rotate(135deg);
  transition-delay: 0.075s;
}

.hamburger--elastic.is-active .hamburger-inner::before {
  transition-delay: 0s;
  opacity: 0;
}

.hamburger--elastic.is-active .hamburger-inner::after {
  transform: translate3d(0, -1.6rem, 0) rotate(-270deg);
  transition-delay: 0.075s;
}

/*
   * Elastic Reverse
   */

.hamburger--elastic-r .hamburger-inner {
  top: 0.1rem;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic-r .hamburger-inner::before {
  top: 0.8rem;
  transition: opacity 0.125s 0.275s ease;
}

.hamburger--elastic-r .hamburger-inner::after {
  top: 1.6rem;
  transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic-r.is-active .hamburger-inner {
  transform: translate3d(0, 0.8rem, 0) rotate(-135deg);
  transition-delay: 0.075s;
}

.hamburger--elastic-r.is-active .hamburger-inner::before {
  transition-delay: 0s;
  opacity: 0;
}

.hamburger--elastic-r.is-active .hamburger-inner::after {
  transform: translate3d(0, -1.6rem, 0) rotate(270deg);
  transition-delay: 0.075s;
}

/*
   * Emphatic
   */

.hamburger--emphatic {
  overflow: hidden;
}

.hamburger--emphatic .hamburger-inner {
  transition: background-color 0.125s 0.175s ease-in;
}

.hamburger--emphatic .hamburger-inner::before {
  left: 0;
  transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in;
}

.hamburger--emphatic .hamburger-inner::after {
  top: 0.8rem;
  right: 0;
  transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in;
}

.hamburger--emphatic.is-active .hamburger-inner {
  transition-delay: 0s;
  transition-timing-function: ease-out;
  background-color: transparent;
}

.hamburger--emphatic.is-active .hamburger-inner::before {
  left: -6rem;
  top: -6rem;
  transform: translate3d(6rem, 6rem, 0) rotate(45deg);
  transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.hamburger--emphatic.is-active .hamburger-inner::after {
  right: -6rem;
  top: -6rem;
  transform: translate3d(-6rem, 6rem, 0) rotate(-45deg);
  transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
}

/*
   * Emphatic Reverse
   */

.hamburger--emphatic-r {
  overflow: hidden;
}

.hamburger--emphatic-r .hamburger-inner {
  transition: background-color 0.125s 0.175s ease-in;
}

.hamburger--emphatic-r .hamburger-inner::before {
  left: 0;
  transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in;
}

.hamburger--emphatic-r .hamburger-inner::after {
  top: 0.8rem;
  right: 0;
  transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in;
}

.hamburger--emphatic-r.is-active .hamburger-inner {
  transition-delay: 0s;
  transition-timing-function: ease-out;
  background-color: transparent;
}

.hamburger--emphatic-r.is-active .hamburger-inner::before {
  left: -6rem;
  top: 6rem;
  transform: translate3d(6rem, -6rem, 0) rotate(-45deg);
  transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.hamburger--emphatic-r.is-active .hamburger-inner::after {
  right: -6rem;
  top: 6rem;
  transform: translate3d(-6rem, -6rem, 0) rotate(45deg);
  transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
}

/*
   * Minus
   */

.hamburger--minus .hamburger-inner::before,
.hamburger--minus .hamburger-inner::after {
  transition: bottom 0.08s 0s ease-out, top 0.08s 0s ease-out, opacity 0s linear;
}

.hamburger--minus.is-active .hamburger-inner::before,
.hamburger--minus.is-active .hamburger-inner::after {
  opacity: 0;
  transition: bottom 0.08s ease-out, top 0.08s ease-out, opacity 0s 0.08s linear;
}

.hamburger--minus.is-active .hamburger-inner::before {
  top: 0;
}

.hamburger--minus.is-active .hamburger-inner::after {
  bottom: 0;
}

/*
   * Slider
   */

.hamburger--slider .hamburger-inner {
  top: 0.1rem;
}

.hamburger--slider .hamburger-inner::before {
  top: 0.8rem;
  transition-property: transform, opacity;
  transition-timing-function: ease;
  transition-duration: 0.15s;
}

.hamburger--slider .hamburger-inner::after {
  top: 1.6rem;
}

.hamburger--slider.is-active .hamburger-inner {
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--slider.is-active .hamburger-inner::before {
  transform: rotate(-45deg) translate3d(-0.42857rem, -0.6rem, 0);
  opacity: 0;
}

.hamburger--slider.is-active .hamburger-inner::after {
  transform: translate3d(0, -1.6rem, 0) rotate(-90deg);
}

/*
   * Slider Reverse
   */

.hamburger--slider-r .hamburger-inner {
  top: 0.1rem;
}

.hamburger--slider-r .hamburger-inner::before {
  top: 0.8rem;
  transition-property: transform, opacity;
  transition-timing-function: ease;
  transition-duration: 0.15s;
}

.hamburger--slider-r .hamburger-inner::after {
  top: 1.6rem;
}

.hamburger--slider-r.is-active .hamburger-inner {
  transform: translate3d(0, 0.8rem, 0) rotate(-45deg);
}

.hamburger--slider-r.is-active .hamburger-inner::before {
  transform: rotate(45deg) translate3d(0.42857rem, -0.6rem, 0);
  opacity: 0;
}

.hamburger--slider-r.is-active .hamburger-inner::after {
  transform: translate3d(0, -1.6rem, 0) rotate(90deg);
}

/*
   * Spin
   */

.hamburger--spin .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin .hamburger-inner::before {
  transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
}

.hamburger--spin .hamburger-inner::after {
  transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin.is-active .hamburger-inner {
  transform: rotate(225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--spin.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
}

.hamburger--spin.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
  transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Spin Reverse
   */

.hamburger--spin-r .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin-r .hamburger-inner::before {
  transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
}

.hamburger--spin-r .hamburger-inner::after {
  transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spin-r.is-active .hamburger-inner {
  transform: rotate(-225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--spin-r.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
}

.hamburger--spin-r.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(90deg);
  transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Spring
   */

.hamburger--spring .hamburger-inner {
  top: 0.1rem;
  transition: background-color 0s 0.13s linear;
}

.hamburger--spring .hamburger-inner::before {
  top: 0.8rem;
  transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spring .hamburger-inner::after {
  top: 1.6rem;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spring.is-active .hamburger-inner {
  transition-delay: 0.22s;
  background-color: transparent;
}

.hamburger--spring.is-active .hamburger-inner::before {
  top: 0;
  transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
  transform: translate3d(0, 0.8rem, 0) rotate(45deg);
}

.hamburger--spring.is-active .hamburger-inner::after {
  top: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
  transform: translate3d(0, 0.8rem, 0) rotate(-45deg);
}

/*
   * Spring Reverse
   */

.hamburger--spring-r .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spring-r .hamburger-inner::after {
  top: -1.6rem;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0s linear;
}

.hamburger--spring-r .hamburger-inner::before {
  transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--spring-r.is-active .hamburger-inner {
  transform: translate3d(0, -0.8rem, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--spring-r.is-active .hamburger-inner::after {
  top: 0;
  opacity: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0s 0.22s linear;
}

.hamburger--spring-r.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(90deg);
  transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Stand
   */

.hamburger--stand .hamburger-inner {
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear;
}

.hamburger--stand .hamburger-inner::before {
  transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--stand .hamburger-inner::after {
  transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--stand.is-active .hamburger-inner {
  transform: rotate(90deg);
  background-color: transparent;
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear;
}

.hamburger--stand.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(-45deg);
  transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--stand.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(45deg);
  transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Stand Reverse
   */

.hamburger--stand-r .hamburger-inner {
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear;
}

.hamburger--stand-r .hamburger-inner::before {
  transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--stand-r .hamburger-inner::after {
  transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--stand-r.is-active .hamburger-inner {
  transform: rotate(-90deg);
  background-color: transparent;
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear;
}

.hamburger--stand-r.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(-45deg);
  transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--stand-r.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(45deg);
  transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Squeeze
   */

.hamburger--squeeze .hamburger-inner {
  transition-duration: 0.075s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--squeeze .hamburger-inner::before {
  transition: top 0.075s 0.12s ease, opacity 0.075s ease;
}

.hamburger--squeeze .hamburger-inner::after {
  transition: bottom 0.075s 0.12s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger--squeeze.is-active .hamburger-inner {
  transform: rotate(45deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger--squeeze.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.075s ease, opacity 0.075s 0.12s ease;
}

.hamburger--squeeze.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
  transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/*
   * Vortex
   */

.hamburger--vortex .hamburger-inner {
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

.hamburger--vortex .hamburger-inner::before,
.hamburger--vortex .hamburger-inner::after {
  transition-duration: 0s;
  transition-delay: 0.1s;
  transition-timing-function: linear;
}

.hamburger--vortex .hamburger-inner::before {
  transition-property: top, opacity;
}

.hamburger--vortex .hamburger-inner::after {
  transition-property: bottom, transform;
}

.hamburger--vortex.is-active .hamburger-inner {
  transform: rotate(765deg);
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

.hamburger--vortex.is-active .hamburger-inner::before,
.hamburger--vortex.is-active .hamburger-inner::after {
  transition-delay: 0s;
}

.hamburger--vortex.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
}

.hamburger--vortex.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(90deg);
}

/*
   * Vortex Reverse
   */

.hamburger--vortex-r .hamburger-inner {
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

.hamburger--vortex-r .hamburger-inner::before,
.hamburger--vortex-r .hamburger-inner::after {
  transition-duration: 0s;
  transition-delay: 0.1s;
  transition-timing-function: linear;
}

.hamburger--vortex-r .hamburger-inner::before {
  transition-property: top, opacity;
}

.hamburger--vortex-r .hamburger-inner::after {
  transition-property: bottom, transform;
}

.hamburger--vortex-r.is-active .hamburger-inner {
  transform: rotate(-765deg);
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
}

.hamburger--vortex-r.is-active .hamburger-inner::before,
.hamburger--vortex-r.is-active .hamburger-inner::after {
  transition-delay: 0s;
}

.hamburger--vortex-r.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
}

.hamburger--vortex-r.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
}


<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
=======
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
>>>>>>> 66a6e687ffb7b50c9db4b3d430845a11e55fa6fe
