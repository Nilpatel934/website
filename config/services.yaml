# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    s3_base: 'https://s3.amazonaws.com/uksga-website-assets'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\UserStoryLogger:
        autowire: true
        public: true
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\Service\S3:
        # redundant thanks to _defaults, but value is overridable on each service
        autowire: true
        # not required, will help in our example
        public: true
        arguments:
            $s3Key: '%env(AWS_KEY)%'
            $s3Secret: '%env(AWS_SECRET_KEY)%'
            $s3Path: '%env(AWS_BASE_URL)%'
            $bucketName: '%env(AWS_BUCKET_NAME)%' 
            $s3Region: '%env(AWS_REGION)%'
            $s3Version: '%env(AWS_VERSION)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

